import plotly.express as px
import pandas as pd

life_data_low['Group'] = 'Lowest Life Expectancy'
life_data_high['Group'] = 'Highest Life Expectancy'
combined_data = pd.concat([life_data_low, life_data_high])

fig = px.bar(
    combined_data, y='STATE', x='RATE', color='Group', barmode='group',
    labels={'STATE': 'State', 'RATE': 'Life Expectancy'},
    title='Top 5 and Bottom 5 States for Life Expectancy in 2019',
    color_discrete_map={'Lowest Life Expectancy': 'red', 'Highest Life Expectancy': 'green'})
fig.update_yaxes(categoryorder='total ascending')
fig.update_traces(marker_line_width=1.5, marker_line_color='black')
fig.update_xaxes(range=[74, 81], dtick=4)
fig.update_layout(
    title='<b>2019 Life Expectancy: Best and Worst States</b>')
fig.update_layout(title_x=0.5, title_font=dict(size=20, family='Arial', color='black'))
fig.update_layout(
    legend=dict(
        x=0.78,
        y=0.02,
        bgcolor='rgba(255, 255, 255, 0.5)'
    )
)

fig.show()

simple_life_data = simple_life()


fig = px.choropleth(
    simple_life_data,
    locations='STATE',
    locationmode='USA-states',
    color='RATE',
    scope='usa',
    color_continuous_scale='Viridis',
    title='2019 Life Expectancy by State'
)

fig.update_layout(title_x=0.5)
fig.update_layout(coloraxis_colorbar_title_text='Average Lifespan')

fig.show()

disability_bad, disability_good = disability_rates()
disability_bad['Group'] = 'Highest Percentage of Disabled Adults'
disability_good['Group'] = 'Lowest Percentage of Disabled Adults'
combined_data = pd.concat([disability_bad, disability_good])
fig = px.bar(
    combined_data, y='LocationDesc', x='DataValue', color='Group', barmode='group',
    labels={'LocationDesc': 'State', 'DataValue': '% of Disabled Adults'},
    color_discrete_map={'Lowest Percentage of Disabled Adults': 'green', 'Highest Percentage of Disabled Adults': 'red'})
fig.update_yaxes(categoryorder='total ascending')
fig.update_traces(marker_line_width=1.5, marker_line_color='black')
fig.update_xaxes(range=[18, 43], dtick=4)
fig.update_layout(
    title='<b>% of Adults with Disability: Best and Worst States</b>')
fig.update_layout(title_x=0.5, title_font=dict(size=20, family='Arial', color='black'))
fig.update_layout(
    legend=dict(
        x=0.68,
        y=0.02,
        bgcolor='rgba(255, 255, 255, 0.5)'
    )
)


fig.show()

disability_code = disability_rates_simple()

fig = px.choropleth(
    disability_code,
    locations='LocationAbbr',
    locationmode='USA-states',
    color='DataValue',
    scope='usa',
    color_continuous_scale='Inferno',
    title='2019 Precent of U.S. Adults with Any Disability'
)

fig.update_layout(title_x=0.5)
fig.update_layout(coloraxis_colorbar_title_text='% of Disabled Adults')

fig.show()

diabetes_bad, diabetes_good = diabetes_rates()
diabetes_bad['Group'] = 'Highest Percentage of Adults with Diabetes'
diabetes_good['Group'] = 'Lowest Percentage of Adults with Diabetes'
combined_data = pd.concat([diabetes_bad, diabetes_good])
fig = px.bar(
    combined_data, y='LocationDesc', x='DataValue', color='Group', barmode='group',
    labels={'LocationDesc': 'State', 'DataValue': '% of Disabled Adults'},
    color_discrete_map={'Lowest Percentage of Adults with Diabetes': 'green', 'Highest Percentage of Adults with Diabetes': 'red'})
fig.update_yaxes(categoryorder='total ascending')
fig.update_traces(marker_line_width=1.5, marker_line_color='black')
fig.update_xaxes(range=[6, 16], dtick=4)
fig.update_layout(
    title='<b>% of Adults with Diabetes: Best and Worst States</b>')
fig.update_layout(title_x=0.5, title_font=dict(size=20, family='Arial', color='black'))
fig.update_layout(
    legend=dict(
        x=0.68,
        y=0.02,
        bgcolor='rgba(255, 255, 255, 0.5)'
    )
)


fig.show()

diabetes_simple = diabetes_simple()

fig = px.choropleth(
    diabetes_simple,
    locations='LocationAbbr',
    locationmode='USA-states',
    color='DataValue',
    scope='usa',
    color_continuous_scale='Plasma',
    title='Percentage of Adults with Diabetes in 2019'
)

fig.update_layout(title_x=0.5)
fig.update_layout(coloraxis_colorbar_title_text='% of Adults with Diabetes')

fig.show()

